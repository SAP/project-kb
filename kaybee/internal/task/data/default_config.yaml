apiVersion: "v1"

sources:
  - repo: https://github.com/sap/project-kb
    branch: vulnerability-data
    rank: 10

# Edit this to point to your Eclipse Steady server (optional)
backend: "https://your.steady.server.here/backend"

policies:
  - strict
#  - soft

#exportdenylist:
#  # SVN
#  - COLLECTIONS-580
#  - CVE-2005-3164
#  - CVE-2005-4838
#  - CVE-2007-0450

export:
  # - target: csv
  #   filename: vulnerabilities.csv
  #   pre:
  #   each: |
  #     {{ if .Fixes }} {{ .VulnerabilityID}},{{ (index (index .Fixes 0).Commits 0).RepositoryURL }}{{end}}
  #   post:
  - target: steady
    filename: steady.sh
    pre: |
      #!/bin/bash

      # ------------------------------------------------
      #  Import script for Eclipse Steady
      # ------------------------------------------------

      ANALYZER_CMD="echo"
      LOCAL_CLONES_DIR="/tmp"

      folder_for_repo(){
        X=$1

        # remove trailing slash
        X=${X%/}

        # remove everything until '://' is matched
        X=${X#*:\/\/}

        # replace _ for .
        X=${X//./_}

        # replace _ for /
        X=${X//\//_}
        echo ${LOCAL_CLONES_DIR}/$X
      }

      clone_once(){
        DIR=$(folder_for_repo $1)
        
        if [ -d $DIR ];
        then
            echo "Folder $DIR exists, skipping git clone"
        else
            echo "Cloning $1 to folder $DIR"
            git clone $1 $DIR
        fi
      }

      #make_vuln_metadata(){
      #  vulnerability_id="$1"
      #  description="$2"
      #  links="$3"
      #
      #  [ -d $vulnerability_id ] || mkdir ./$vulnerability_id
      #  > $vulnerability_id/meta.properties
      #  echo "vulnerability_id=$vulnerability_id" >> $vulnerability_id/meta.properties
      #  echo "description=$description" >> $vulnerability_id/meta.properties
      #  echo "links=$links" >> $vulnerability_id/meta.properties
      #}

      checkout_commit(){
        repo_url=$1
        commit_id=$2
        branch=$3
        vulnerability_id=$4

        clone_once $repo_url
        repo_dir=$(folder_for_repo $repo_url)

        timestamp=$(git -C $repo_dir show --no-patch --no-notes --pretty='%at' $commit_id) 

        [ -d $vulnerability_id/$commit_id ] || mkdir -p $vulnerability_id/$commit_id
        
        echo "{" > $vulnerability_id/$commit_id/metadata.json
        echo "  \"repository\" : \"$repo_url\"," >> $vulnerability_id/$commit_id/metadata.json
        echo "  \"branch\" : \"$branch\"," >> $vulnerability_id/$commit_id/metadata.json
        echo "  \"timestamp\" : \"$timestamp\"," >> $vulnerability_id/$commit_id/metadata.json
        echo "  \"commit_id\" : \"$commit_id\"" >> $vulnerability_id/$commit_id/metadata.json
        echo "}" >> $vulnerability_id/$commit_id/metadata.json

        echo "dir=$repo_dir"
        echo "pwd=`pwd`"

        # cd repository
        for F in $(git -C $repo_dir diff  --name-only  $commit_id^..$commit_id);
        do
          
          echo "repo_dir=$repo_dir"
          echo "pwd=`pwd`"
          
          echo "Extracting file: $F"
          [ -d $vulnerability_id/$commit_id/before/$(dirname $F) ] || mkdir -p $vulnerability_id/$commit_id/before/$(dirname $F)
          [ -d $vulnerability_id/$commit_id/after/$(dirname $F) ] || mkdir -p $vulnerability_id/$commit_id/after/$(dirname $F)

          git -C $repo_dir show $commit_id~1:$F > $vulnerability_id/$commit_id/before/$F
          git -C $repo_dir show $commit_id:$F > $vulnerability_id/$commit_id/after/$F
        done
      }

    each: |+
      # -----------------------------------------------
      #  Analyzing vulnerability {{ .VulnerabilityID}}
      # -----------------------------------------------   
      [ -d ./{{ .VulnerabilityID }} ] || mkdir ./{{ .VulnerabilityID }}
      cat << EOM > ./{{ .VulnerabilityID }}/metadata.json
      {{ .ToJSON }}
      EOM
      {{ if .Fixes}}{{ $description :=  or ((index .Notes 0).Text) "" }}
      #make_vuln_metadata {{ .VulnerabilityID }} '{{ JoinNotes . }}' {{ LinksAsCSV . }}
      {{ $vuln := .VulnerabilityID}}{{ $repo := (index (index .Fixes 0).Commits 0).RepositoryURL }}
      {{ range $f := .Fixes  }}{{ range .Commits }}checkout_commit {{$repo}} {{.ID}} {{$f.ID}} {{ $vuln }}
      {{end}}{{end}}
      $ANALYZER_CMD -d ./{{ .VulnerabilityID }}
      {{else}}
      # This vulnerability has no fix-commits
      {{end}}

    post: |-
      # ------------------------------------------------
      # This script was generated with KayBee
      # ------------------------------------------------
  - target: xml
    filename: vulnerabilities.xml
    pre:  |
      <xml>
        <Vulnerabilities>

    each: |
      <Vulnerability id="{{ .VulnerabilityID}}">
        <fixes>
        {{range .Fixes }}
            <fix id="{{ .ID }}">
            {{range .Commits }}
              <commit hash="{{ .ID }}" repository="{{ .RepositoryURL }}" />{{end}}
            </fix>
          </fixes>{{end}}
          <notes>
        {{range .Notes }}
            <note>
              {{range $link := .Links }}<link url="{{ $link }}" />
              {{end}}
              {{ if .Text }}<text>{{ .Text }}</text>{{ end }}
            </note>{{end}}
          </notes>
      </VulnerabilityID>
    post: |
      </Vulnerabilities>
      </xml>